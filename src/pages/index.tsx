import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
// import styles from '@/styles/Home.module.css'
import styles from "@/styles/index.module.css";
import fs from "fs";
import path from "path";
import { darken, lighten } from "polished";

const inter = Inter({ subsets: ["latin"] });
let colors = ["#ff5050", "#ffff00", "#00ff99", "#3366ff"];
function dynamicColor(col: string) {
  return {
    // backgroundColor:col
  };
}

export default function Home(props: {
  data: {
    category: string;
    score: number;
    icon: string;
  }[];
}) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className={styles.parentDiv}>
          <div className={styles.left}>
            <div className={styles.container}>
              <h2>Your Result</h2>
              <div className={styles.circle}>
                <h1>76</h1>
                <p>of 100</p>
              </div>
              <h3>Great</h3>
              <p>
                You scored higher than 65% of the people who have taken these
                tests
              </p>
            </div>
          </div>
          <div className={styles.right}>
            <div className={styles.container}>
              <h1>Summary</h1>
              {props.data.map((item, ind) => {
                const lightBackground = lighten(0.3, colors[ind]);
                const darkTextColor = darken(0.3, colors[ind]);
                return (
                  <li key={ind} style={{ backgroundColor: lightBackground }}>
                    <div className={styles.imgContainer}>
                      <Image
                        src={item.icon}
                        alt="icon"
                        height={25}
                        width={25}
                      />
                      <p style={{ color: darkTextColor }}>{item.category}</p>
                    </div>
                    {item.score}/100
                  </li>
                );
              })}
              <button>Continue</button>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

export async function getStaticProps() {
  let pathToData = path.join(process.cwd(), "score_data.json");
  let dataRead = await fs.readFileSync(pathToData, "utf-8");
  let actualData = await JSON.parse(dataRead);
  return {
    props: {
      data: actualData,
    },
  };
}
